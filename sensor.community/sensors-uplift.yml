transform:
  # Flatten object to array with "key" property
  # Reformat manufacturers
  # Map properties to IRIs
  # Remove empty values
  # TODO: rest of known properties
  - |
    def to_iri: gsub(" "; "-") | gsub("[^A-Za-z0-9_-]"; "") ;
    (.mappedProperties) as $PROPERTIES
    | .sensors
    | [to_entries 
      | .[]
      | .value + { "key": "\(.value.manufacturer | to_iri)/\(.key | to_iri)" }
      | .manufacturer |= { "@id": ("manuf:" + to_iri), "name": ., "inScheme": "https://w3id.org/ad4gd/sensors" }
      | (.observed_properties |= map(if contains(":") then . else $PROPERTIES.[.] // empty end))
      | ."inScheme" = "https://w3id.org/ad4gd/sensors"
      | del(..|select(. == ""))
    ] + [
      {
        "@id": "https://w3id.org/ad4gd/sensors",
        "@type": "skos:ConceptScheme",
        "skos:prefLabel": "AD4GD sensors"
      },
      {
        "@id": "ad4gd:SensorManufacturer",
        "skos:prefLabel": "Sensor Manufacturer",
        "@type": ["owl:Class", "skos:Concept"]
      }
    ]

types:
  $[?observed_properties]:
    - sosa:Sensor
    - skos:Concept
  $[*].manufacturer:
    - skos:Concept
    - ad4gd:SensorManufacturer

context:
  $:
    # TODO: URIs
    '@base': https://w3id.org/ad4gd/sensors/
    manuf: https://w3id.org/ad4gd/sensors/manufacturers/
    sosa: http://www.w3.org/ns/sosa/
    dct: http://purl.org/dc/terms/
    rdfs: http://www.w3.org/2000/01/rdf-schema#
    skos: http://www.w3.org/2004/02/skos/core#
    owl: http://www.w3.org/2002/07/owl#
    ad4gd: 'urn:ad4gd:'
    key: '@id'
    observed_properties:
      '@id': sosa:observes
      '@type': '@id'
      '@context':
        '@base': https://w3id.org/ad4gd/properties/
    manufacturer: skos:broader
    name: skos:prefLabel
    description: dct:description
    inScheme:
      '@id': skos:inScheme
      '@type': '@id'
    references:
      '@id': rdfs:seeAlso
      '@type': '@id'