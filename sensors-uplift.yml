transform:
  # Flatten object to array with "key" property
  # Reformat manufacturers
  # Map properties to IRIs
  # Remove empty values
  # TODO: rest of known properties
  - |
    def properties: {
      "temperature": "http://w3id.org/ad4gd/ev/eav/AirTemperature",
      "humidity": "http://w3id.org/ad4gd/ev/eav/RelativeHumidity"
    };
    def to_iri: gsub(" "; "-") | gsub("[^A-Za-z0-9_-]"; "") ;
    [to_entries 
      | .[]
      | .value + { "key": (.key | to_iri) }
      | .manufacturer |= { "@id": ("manuf:" + to_iri), "name": ., "inScheme": "https://w3id.org/ad4gd/sensors/manufacturers" }
      | (.observed_properties |= map(properties[.] // empty))
      | ."inScheme" = "https://w3id.org/ad4gd/sensors"
      | del(..|select(. == ""))
    ] + [
      {
        "@id": "https://w3id.org/ad4gd/sensors",
        "@type": "skos:ConceptScheme",
        "skos:prefLabel": "AD4GD sensors",
      },
      {
        "@id": "https://w3id.org/ad4gd/sensors/manufacturers",
        "@type": "skos:ConceptScheme",
        "skos:prefLabel": "AD4GD sensor manufacturers",
      }
    ]

types:
  $[*]:
    - sosa:Sensor
    - skos:Concept
  $[*].manufacturer: skos:Concept

context:
  $:
    # TODO: URIs
    '@base': https://w3id.org/ad4gd/sensors/
    manuf: https://w3id.org/ad4gd/sensors/manufacturers/
    sosa: http://www.w3.org/ns/sosa/
    dct: http://purl.org/dc/terms/
    rdfs: http://www.w3.org/2000/01/rdf-schema#
    skos: http://www.w3.org/2004/02/skos/core#
    key: '@id'
    observed_properties:
      '@id': sosa:observes
      '@type': '@id'
    manufacturer: dct:creator
    name: rdfs:label
    description: dct:description
    inScheme:
      '@id': skos:inScheme
      '@type': '@id'